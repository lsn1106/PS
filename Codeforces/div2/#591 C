/*
19.11.1 codeforces #591 div2 C
이분탐색
*/
#include <iostream>
#include <algorithm>
using namespace std;
typedef long long ll;

ll n, x, y, a, b;
ll k, arr[200001];

ll gcd(ll u, ll v) {
	if (v == 0) return u;
	return gcd(v, u % v);
}

ll lcm(ll u, ll v) {return u * v / gcd(u, v);}

bool isPossible(ll m) {
	ll t = m / lcm(a, b);
	ll r = m / a - t;
	ll s = m / b - t;

	ll sum=0;
	for (int i = 0; i < t; i++) 
		sum += arr[i] * (x + y) / 100;
	
	for (int i = t; i < r + t; i++) 
		sum += arr[i] * x / 100;
	
	for (int i = r + t; i < s + r + t; i++) 
		sum += arr[i] * y / 100;

	if (sum < k) return false;
	else return true;
}

int main() {
	int q; cin >> q;
	while (q--) {
		cin >> n;
		for (int i = 0; i < n; i++)
			cin >> arr[i];
		cin >> x >> a >> y >> b >> k;
		if (x < y) {
			swap(x, y);
			swap(a, b);
		}
		sort(arr, arr + n, [](ll p1, ll p2) {
			return p1 > p2;
		});

		ll lo = 1, hi = n + 1;
		while (lo < hi) {
			ll mid = (lo + hi) / 2;
			if (isPossible(mid)) hi = mid;
			else lo = mid + 1;
		}

		cout << (lo == n + 1 ? -1 : lo) << '\n';
	}
}
