/*
19.11.9 이분탐색
*/

#include <iostream>
#include <algorithm>
#include <utility>
#include <vector>
using namespace std;
typedef long long ll;
typedef pair<ll, ll> P;

vector<P> arr;
ll n, s;

bool isPossible(ll m) {
	int cnt = 0;
	ll sum = 0;
	for (int i = n - 1; i >= 0; i--) {
		ll l = arr[i].first, r = arr[i].second;
		if (m<=r && cnt <= n/2) {
			cnt++;
			sum += max(l, m);
		}
		else
			sum += l;
	}
	if (cnt <= n / 2 || sum > s) return false;
	return true;
}

int main() {
	int t; cin >> t;
	while (t--) {
		cin >> n >> s;
		arr.resize(n);
		ll lo = 1e9, hi = 0;
		for (int i = 0; i < n; i++) {
			cin >> arr[i].first >> arr[i].second;
			lo = min(lo, arr[i].first);
			hi = max(hi, arr[i].second);
		}
		
		sort(arr.begin(), arr.end());

		while (lo < hi) {
			ll mid = (lo + hi+1) / 2;
			if (isPossible(mid)) lo = mid;
			else hi = mid-1;
		}

		cout << lo << '\n';
	}
}
